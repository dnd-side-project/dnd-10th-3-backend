plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'dnd'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
dependencies {

	//SECURITY
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

    // TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // SWAGGER
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // DATABASE
    runtimeOnly 'com.mysql:mysql-connector-j'

    // WEB
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // LOMBOK
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'


	  // REDIS
	  implementation 'org.springframework.boot:spring-boot-starter-data-redis'


    // AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // QUERYDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.3'

	//JSON
	implementation 'org.json:json:20231013'
}


tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}